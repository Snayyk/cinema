<detailFilm>
  <div class="spinner-border" id="spinner" role="status"></div>

  <div class="shadow px-2 pt-2 pb-5 rounded-3" style="background-color: #6883bc;">
      <!-- Titre-->
      <h3 class="">{this.state.infos.title}</h3> 
      <div class="row"> 
        <div class="col-5"> <!-- Image-->
          <img src="https://image.tmdb.org/t/p/w500/{this.state.infos.poster_path}" class="img-fluid rounded">
          </div>
        <div class="col-7">
          <!-- Genres-->
          <h5><span class="mx-2" each={genre in this.state.liste_genres}>
            <strong>{genre.name}</strong>
          </span></h5>

          <!-- Date-->
          <h5 class="col-12">
            {this.state.infos.release_date}
          </h5>
          <!-- Pays de production-->
          <div class="badge bg-success rounded ">
            {this.state.pays}
          </div>

          <!-- Réal-->
          <h5>De:
            <strong>
              {this.state.real.original_name}
            </strong>
          </h5>

          <!-- Casting-->
          <h5>Avec:
            <span class="mx-1" each={cast in this.state.casting}>
              {cast.original_name},
            </span>
          </h5>

          <div class="row">
            <div class="mx-1 col-2" each={cast in this.state.casting}>
              <img src="https://image.tmdb.org/t/p/w200/{cast.profile_path}" class="img-fluid rounded">
            </div>
          </div>

          <!-- Résumé-->
          <div class="col-12">
            <h6>
              {this.state.infos.overview}
            </h6>
          </div>
          <!-- Note-->
          <h5 class="col-12">Note:  
            <span class="" each={element in this.state.yellowstar} id="star">
              <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="yellow" class="bi bi-star-fill" viewBox="0 0 16 16"> <path d="M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.282.95l-3.522 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z"/></svg>
            </span>
            <span class="" each={element in this.state.blackstar} id="star">
              <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-star-fill" viewBox="0 0 16 16"> <path d="M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.282.95l-3.522 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z"/></svg>
            </span>
            <span class="mx-1">
              {this.state.infos.vote_average}/10
            </span>
            <!-- Votes-->
            <span class="mx-1"> 
              {this.state.infos.vote_count} Avis
            </span>
          </h5>
          <!-- Retour-->
          <a href="" class="btn btn-primary">Retour</a>
        </div>
      </div>
  </div>
  
  <script>
    export default {
      state: {
        infos: 0,
        note: 0,
        liste_genres: [],
        yellowstar: 0,
        blackstar: 0,
        pays: "",
        casting: [],
        real: ""
      },
      onBeforeMount(props, state){
        
        this.detailsFilm();
        
      },
      onMounted(){
        document.getElementById("spinner").className ="visually-hidden";

      },setStar(){ //Défini le nombres d'étoiles jaunes et vides
                
        let indice = Math.round(this.state.infos.vote_average);
        let indicenoir = 10 - indice;
        
        this.state.yellowstar = Array(indice);
        this.state.blackstar =  Array(indicenoir); 
      },
      detailsFilm(){ //Stock toutes les informations nécessaires aux détailx
       
        this.zeub.detailFilm(this.props.id).then(result => {
        this.state.infos = result;
        this.state.note = result.vote_average;
        this.state.liste_genres = result.genres;
        this.state.pays = result.original_language.toUpperCase();
       
        this.setStar();
        this.creditsFilm();
        this.update();
        });

        
        
      },
      creditsFilm(){ //Stock le réal et les 4 premiers membres du casting
        this.zeub.creditFilm(this.props.id).then(result => {
          for(let i = 0; i< 4; i++){
            this.state.casting[i] = result.cast[i];
           
          }
          this.state.real = result.crew.find( element => element.known_for_department == "Directing");
        
        this.update();
        });
      }
      
      
    }
  </script>
</detailFilm>
